ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 7, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 8, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 8, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = ""),
fill = guide_legend(title = "Network Type")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
ggsave("./single-asset-same-network.pdf",
plot = p_same_network,
device = "pdf")
single_chain
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 8, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-rhat_sigma,
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
theme_bw()
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 8, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-c(rhat_sigma, kind),
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
theme_bw()
p_mixing_performance
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 8, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-c(rhat_sigma, kind),
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
guides(fill = guide_legend(title = "Network Type")) +
theme_bw() +
theme(legend.position = "top")
p_mixing_performance
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 8, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-c(rhat_sigma, kind),
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
guides(color = guide_legend(title = "Network Type")) +
theme_bw() +
theme(legend.position = "top")
p_mixing_performance
ggsave("./single-asset-mixing-performance.pdf",
plot = p_mixing_performance,
device = "pdf")
library(tidyverse)
benchmark <- read_csv("../garch11-baseline.csv")
single_chain <- read_csv("../mcmc-single-chain-evaluation-all.csv")
same_network <- read_csv("../mcmc-same-network-evaluation-all.csv")
single_chain
same_network
benchmark_long <- benchmark %>%
pivot_longer(cols = everything(),
names_to = "measure",
values_to = "garch")
single_chain_comparison <- single_chain %>%
select(-c(mape, config, network)) %>%
mutate(well_mixing = rhat_sigma <= 1.01) %>%
pivot_longer(-c(well_mixing, nu),
names_to = "measure",
values_to = "values") %>%
filter(measure != "rhat_sigma") %>%
left_join(benchmark_long, by = "measure")
single_chain_comparison
same_network_evaluation <- same_network %>%
pivot_longer(-c(network, nu),
names_to = "measure",
values_to = "values") %>%
left_join(benchmark_long, by = "measure") %>%
filter(!measure %in% c("rhat_sigma", "rmse", "mape")) %>%
mutate(network = factor(network, levels = sort(unique(network))))
same_network_evaluation <- same_network %>%
pivot_longer(-network,
names_to = "measure",
values_to = "values") %>%
left_join(benchmark_long, by = "measure") %>%
filter(!measure %in% c("rhat_sigma", "rmse", "mape")) %>%
mutate(network = factor(network, levels = sort(unique(network))))
var_translate = c(
"VaR_0_1" = "VaR 0.1%",
"VaR_1_0" = "VaR 1%",
"VaR_5_0" = "VaR 5%",
"VaR_10_0" = "VaR 10%"
)
var_target = c(
"VaR_0_1" = 0.001,
"VaR_1_0" = 0.01,
"VaR_5_0" = 0.05,
"VaR_10_0" = 0.1
)
p_single_chain <- single_chain_comparison %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure)) %>%
ggplot(aes(y = values, x = well_mixing)) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_boxplot() +
facet_grid(rows = vars(measure), cols = vars(nu), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Good mixing in sigma?") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_single_chain
ggsave("./single-asset-single-chain.pdf",
plot = p_single_chain,
device = "pdf")
single_chain_comparison %>%
filter(measure == "rmse")
single_chain_comparison %>%
filter(measure == "rmse") %>%
summarise(min = min(rmse),
max = max(rmse),
pct_diff = max/min)
single_chain_comparison %>%
filter(measure == "rmse") %>%
summarise(min = min(measure),
max = max(measure),
pct_diff = max/min)
single_chain_comparison %>%
filter(measure == "rmse") %>%
summarise(min = min(values),
max = max(values),
pct_diff = max/min)
single_chain_comparison %>%
filter(measure == "rmse") %>%
group_by(nu) %>%
summarise(min = min(values),
max = max(values),
mean = mean(values))
single_chain_comparison %>%
filter(measure == "rmse") %>%
group_by(nu) %>%
summarise(min = min(values),
max = max(values),
mean = mean(values)) %>%
write_csv(., file = "./single-asset-nu-rmse.csv")
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 8, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = ""),
fill = guide_legend(title = "Network Type")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 2, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = ""),
fill = guide_legend(title = "Network Type")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
ggsave("./single-asset-same-network.pdf",
plot = p_same_network,
device = "pdf")
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 8, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-c(rhat_sigma, kind),
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
guides(color = guide_legend(title = "Network Type")) +
theme_bw() +
theme(legend.position = "top")
p_mixing_performance
p_mixing_performance <- single_chain %>%
mutate(kind = ifelse(network <= 2, "RNN", "LSTM")) %>%
select(rhat_sigma, starts_with("VaR"), kind) %>%
pivot_longer(-c(rhat_sigma, kind),
names_to = "measure",
values_to = "values") %>%
mutate(target = var_target[measure],
measure = var_translate[measure]) %>%
ggplot(aes(x = rhat_sigma, y = values)) +
geom_point(aes(color = kind)) +
facet_wrap(vars(measure), scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
xlab("Rhat sigma") + ylab("% test data falling below VaR") +
guides(color = guide_legend(title = "Network Type")) +
theme_bw() +
theme(legend.position = "top")
p_mixing_performance
ggsave("./single-asset-mixing-performance.pdf",
plot = p_mixing_performance,
device = "pdf")
bbb <- read_csv("../bbb-single-asset-all.csv")
bbb
bbb %>%
pivot_longer(-(network, nu))
bbb %>%
pivot_longer(-(network, nu),
names_to = "measure",
values_to = "values")
bbb %>%
pivot_longer(-c(network, nu),
names_to = "measure",
values_to = "values")
bbb_long <- bbb %>%
pivot_longer(-c(network, nu),
names_to = "measure",
values_to = "values")
bbb_nu <- bbb_long %>%
group_by(nu, measure) %>%
summarise(values = mean(values))
bbb_nu <- bbb_long %>%
group_by(nu, measure) %>%
summarise(values = mean(values), .groups = "drop")
bbb_nu
bbb_network <- bbb_long %>%
group_by(network, measure) %>%
summarise(values = mean(values), .groups = "drop")
bbb_network
single_chain_comparison %>%
left_join(bbb_nu, by = "nu")
single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure"))
bbb_long <- bbb %>%
pivot_longer(-c(network, nu),
names_to = "measure",
values_to = "bbb")
bbb_nu <- bbb_long %>%
group_by(nu, measure) %>%
summarise(bbb = mean(bbb), .groups = "drop")
bbb_network <- bbb_long %>%
group_by(network, measure) %>%
summarise(bbb = mean(bbb), .groups = "drop")
single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure"))
single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure")) %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure))
p_single_chain <-
single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure")) %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure)) %>%
ggplot(aes(y = values, x = well_mixing)) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_point(aes(y = bbb, color = "BBB"), shape = 2) +
geom_boxplot() +
facet_grid(rows = vars(measure), cols = vars(nu), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black", "BBB" = "blue")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Good mixing in sigma?") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_single_chain <- single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure")) %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure)) %>%
ggplot(aes(y = values, x = well_mixing)) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_point(aes(y = bbb, color = "BBB"), shape = 2) +
geom_boxplot() +
facet_grid(rows = vars(measure), cols = vars(nu), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black", "BBB" = "blue")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Good mixing in sigma?") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_single_chain
p_single_chain <- single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure")) %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure)) %>%
ggplot(aes(y = values, x = well_mixing)) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_point(aes(y = bbb, color = "BBB"), shape = 4) +
geom_boxplot() +
facet_grid(rows = vars(measure), cols = vars(nu), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black", "BBB" = "blue")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Good mixing in sigma?") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_single_chain
p_single_chain <- single_chain_comparison %>%
left_join(bbb_nu, by = c("nu", "measure")) %>%
filter(measure != "rmse") %>%
mutate(target = var_target[measure]) %>%
mutate(measure = ifelse(measure %in% names(var_translate),
var_translate[measure],
measure)) %>%
ggplot(aes(y = values, x = well_mixing)) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_hline(aes(yintercept = bbb, color = "BBB"), size = 1) +
geom_boxplot() +
facet_grid(rows = vars(measure), cols = vars(nu), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black", "BBB" = "blue")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = "")) +
xlab("Good mixing in sigma?") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_single_chain
ggsave("./single-asset-single-chain.pdf",
plot = p_single_chain,
device = "pdf")
p_same_network <- same_network_evaluation %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 2, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = ""),
fill = guide_legend(title = "Network Type")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
same_network_evaluation %>%
left_join(bbb_network, by = c("network", "measure"))
bbb_network <- bbb_long %>%
group_by(network, measure) %>%
summarise(bbb = mean(bbb), .groups = "drop") %>%
mutate(network = factor(network, levels = sort(unique(network))))
same_network_evaluation %>%
left_join(bbb_network, by = c("network", "measure"))
same_network_evaluation %>%
left_join(bbb_network, by = c("network", "measure")) %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 2, "RNN", "LSTM"))
p_same_network <- same_network_evaluation %>%
left_join(bbb_network, by = c("network", "measure")) %>%
mutate(target = var_target[measure]) %>%
mutate(measure = var_translate[measure]) %>%
mutate(kind = ifelse(as.numeric(network) <= 2, "RNN", "LSTM")) %>%
ggplot(aes(x = network, y = values)) +
geom_col(aes(fill = kind),position = "dodge2", width = 0.7, alpha = 0.5) +
geom_hline(aes(yintercept = garch, color = "Garch(1, 1)"), size = 1) +
geom_hline(aes(yintercept = target, color = "Target"), size = 1, linetype = "dotted") +
geom_point(aes(y = bbb, color = "BBB"), shape = 4) +
facet_wrap(vars(measure), scales = "free") +
scale_color_manual(values = c("Garch(1, 1)" = "red", "Target" = "black", "BBB" = "blue")) +
scale_y_continuous(labels = scales::percent) +
guides(color = guide_legend(title = ""),
fill = guide_legend(title = "Network Type")) +
xlab("Network ID") + ylab("% test data falling below VaR") +
theme_bw() +
theme(legend.position = "top")
p_same_network
ggsave("./single-asset-same-network.pdf",
plot = p_same_network,
device = "pdf")
single_chain
single_chain %>%
group_by(nu, starts_with("VaR")) %>%
summarise(mean = mean(rmse),
min = min(rmse),
max = max(rmse))
single_chain %>%
select(rmse, starts_with("VaR"), "rmse")
p_single_chain
single_chain
single_chain %>% arrange(-VaR_10_0)
single_chain %>% arrange(VaR_10_0)
single_chain %>% filter(nu %in% c(3, 30))
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.01 - VaR_0_1))
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.01 - VaR_0_1)) %>% arrange(diff)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.01 - VaR_0_1)) %>% arrange(diff_target)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.01 - VaR_0_1)) %>% group_by(nu) %>% summarise(median = median(diff_target), .groups = "drop")
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% summarise(median = median(diff_target), .groups = "drop")
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% arrange(diff_target)
single_chain %>% filter(nu %in% c(3, 30)) %>% group_by(nu) %>% summarise(median = median(VaR_0_1))
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% arrange(diff_target)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff) %>% select(config, nu, diff_target)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff) %>% select(config, nu, diff_target) %>% pivot_wider(id_cols = config, names_from = nu, values_from = diff_target)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff) %>% select(config, nu, diff_target) %>% pivot_wider(id_cols = config, names_from = nu, values_from = diff_target) %>% drop_na()
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff)
single_chain %>% filter(nu %in% c(3, 30)) %>% mutate(diff_target = abs(0.001 - VaR_0_1)) %>% group_by(nu) %>% mutate(min_diff = min(diff_target)) %>% filter(diff_target == min_diff)
